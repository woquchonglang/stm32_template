name: Code Review

on: push

jobs:
  review:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    container:
        image: archlinux
    steps:
      - name: Get required pacman pkgs
        shell: bash
        run: |
          sed -i 's/SigLevel = Required DatabaseOptional/SigLevel = Optional TrustAll/' /etc/pacman.conf
          pacman --noconfirm --noprogressbar -Syyu
          pacman --noconfirm --noprogressbar -Sy \
            git \
            diffutils \
            cmake \
            ninja \
            clang \
            arm-none-eabi-gcc \
            arm-none-eabi-newlib \
            python-pip
          pip install kconfiglib==14.1.0 --break-system-packages

      # Fuck the issue with actions/checkout where the checkout repo is not mark as safe
      - name: Mark directory as safe for git
        shell: bash
        run: |
          git config --global --add safe.directory /__w/PinyCore/PinyCore

      - uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Cmake
        run: cmake -B build -G Ninja

      # - name: clang-format
      #   id: clang-format 
      #   shell: bash {0}
      #   run: |
      #     FILES=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }}...HEAD -- '*.cpp' '*.hpp' '*.c' '*.h' | grep -v "sdkconfig.h" | grep -v "/hal/" | grep -v -E "(^|/)Lib/")
      #     if [ -z "$FILES" ]; then
      #       echo "No files to check"
      #       exit 0
      #     fi
      #     clang-format --dry-run --Werror --style=file $FILES

      # - name: Add PR comment
      #   if: (failure() && (steps.clang-format.outcome == 'failure' && github.event_name == 'pull_request'))
      #   uses: mshick/add-pr-comment@v2
      #   with:
      #     message: |
      #       ## ⚠️ 代码风格检查失败
      #
      #       ### Clang-Format 问题
      #       请运行 `clang-format -i <file>` 修复格式问题。
      #
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     refresh-message-position: true

      - name: Ninja build
        run: ninja -C build

